diff --git a/node_modules/three/build/three.module.js b/node_modules/three/build/three.module.js
index ec4b0e8..2a30063 100644
--- a/node_modules/three/build/three.module.js
+++ b/node_modules/three/build/three.module.js
@@ -11787,13 +11787,13 @@ function checkIntersection( object, material, raycaster, ray, pA, pB, pC, point
 
 	let intersect;
 
-	if ( material.side === BackSide ) {
+	if ( material && ( material.side === BackSide ) ) {
 
 		intersect = ray.intersectTriangle( pC, pB, pA, true, point );
 
 	} else {
 
-		intersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );
+		intersect = ray.intersectTriangle( pA, pB, pC, material ? material.side !== DoubleSide : false, point );
 
 	}
 
diff --git a/node_modules/three/src/objects/Mesh.js b/node_modules/three/src/objects/Mesh.js
index 38b07c6..b8f7329 100644
--- a/node_modules/three/src/objects/Mesh.js
+++ b/node_modules/three/src/objects/Mesh.js
@@ -334,14 +334,13 @@ function checkIntersection( object, material, raycaster, ray, pA, pB, pC, point
 
 	let intersect;
 
-	if ( material.side === BackSide ) {
+	if ( material && ( material.side === BackSide ) ) {
 
 		intersect = ray.intersectTriangle( pC, pB, pA, true, point );
 
 	} else {
 
-		intersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );
-
+		intersect = ray.intersectTriangle( pA, pB, pC, material ? material.side !== DoubleSide : false, point );
 	}
 
 	if ( intersect === null ) return null;
